name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    env:
      APP_KEY: ${{secrets.APP_KEY}}
      APP_SECRET: ${{secrets.APP_SECRET}}
      REFRESH_TOKEN: ${{secrets.REFRESH_TOKEN}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      USERNAME_TEST: ${{secrets.USERNAME_TEST}}
      PASSWORD_TEST: ${{secrets.PASSWORD_TEST}}
      BASE_URL: ${{secrets.BASE_URL}}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, '3.10']
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
    steps:
      - name: Print Concurrency Group
        env:
          CONCURRENCY_GROUP: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
        run: |
          echo -e "\033[31;1;4mConcurrency Group\033[0m"
          echo -e "$CONCURRENCY_GROUP\n"
        shell: bash
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run Tests
        run: |
          python manage.py test --settings main.local_settings

  lint:
    env:
      APP_KEY: ${{secrets.APP_KEY}}
      APP_SECRET: ${{secrets.APP_SECRET}}
      REFRESH_TOKEN: ${{secrets.REFRESH_TOKEN}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      USERNAME_TEST: ${{secrets.USERNAME_TEST}}
      PASSWORD_TEST: ${{secrets.PASSWORD_TEST}}
      BASE_URL: ${{secrets.BASE_URL}}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install pipenv
    - name: Run pylint
      run: |
        pylint --load-plugins pylint_django --django-settings-module=main.local_settings backends frontend
    - name: Run black
      run: |
        black --check .
